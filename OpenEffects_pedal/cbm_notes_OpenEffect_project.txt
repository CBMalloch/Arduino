Observations testing the OnkartGromt Open Effects Project

SDA is A4/SDA0
SCL is A5/SCL0

pots at top of board, numbered 0 (L) to 3 (R)
  CW rotation decreases all
pot 0 is A6 (!) 
pot 1 is A3
pot 2 is A2
pot 3 is A1, also labeled VOL

pin 8 controls all 10 LEDs, which are WS2812
    example from Adafruit/NeoPixel/strand test
  0 is the singleton
  1 is R dome
  2 is L dome
  3-9 are next
  
OLED screen at I2C address 0x3c 128x64
    o remove library from Teensy location 
      ~/Applications/Arduino.app/Contents/Java/hardware/teensy/
        avr/libraries/Adafruit_SSD1306
    o modify Adafruit_SSD1306.h to use 128x64
      #define SSD1306_128_64
      // #define SSD1306_128_32
    example from Adafruit_SSD1306/ssd1306_128x64_i2c.ino
      can ignore stuff about OLED_RESET
  **** NOTE ****
    The display method takes about 100ms !!!
    So use the OLED for status / setup only, not for realtime display
      
SW1 and SW2 are the 3-position toggle switches, which will be at GND, 1.15, or 3.3V. On the new box, these are momentary switches.
  SW1 is A12
  SW2 is A13
  
Are stomp switches OnOff and Boost?
  OnOff is Tap1 is Int1 is pin 2 (CS)
  Boost is Tap2 is Int2 is pin 3 (TX/PWM)

CV1 and CV2 are on the other bank of 1/4" sockets;
CV1 is associated with "Sine modulation CV pedal input"
CV2 is associated with "Freq expression pedal"
const int CV1 = A10;
const int CV2 = A11;
The expression pedal I have, a Moog, in "standard" configuration, has
             ts    tr       sr
      0      0    110K     110K
      full   52K    0       52K
and in "other" configuration
             ts    tr       sr
      0     110K  110K       0
      full   52K    0       52K
so it switches tip and ring.
From the box, we have no volts tip, shaft, or ring

The GND pins of the connector connect to shafts for all jacks
CVInput1 ( pin 7 ) of the connector connects to tip of jack Exp2
CVInput2 ( pin 8 ) of the connector connects to tip of jack Exp1
No pins of the connector connect to ring of either Exp1 or Exp2,
although pin 9 (3V3) should apparently do so...


Leaving the relays alone (normal) connects InputL to OutputL etc.
Pulling them in connects InputL to EffectInL to LINEIN_L on the SGTL5000
  and LINEOUT_L on the SGTL5000 to EffectOutL to OutputL etc.
The SGTL5000 is the DAC on the audio shield and built into the box
int relayL = 4;      // select the pin for the RelayL
int relayR = 5;      // select the pin for the RelayR


LED management:
  The WS2812 pixel strip updates are unreliable at 800MHz. I changed the 
  configuration to NEO_KHZ400 and it is much smoother. 
  (later) But it doesn't work. Have gone back to 800MHz and it's OK.


Observations:
  WS2812 communications is glitchy with the Teensy 3.6
    demonstrated in status 2 with 3 calls to strip.show()
    yielding (occasionally) different displays
  I can't seem to see input using purple wire, input L or R,
    sgtl5000_1.inputSelect ( AUDIO_INPUT_LINEIN );
    sgtl5000_1.lineInLevel ( 0 );   // default 0 is 3.12Vp-p
    through VU meter or 1/8" output jack, regardless of 
    relay settings. Note running under USB power... Looks like
    5V_D runs the WS2812s, while 5V_A runs the op-amps.
  Archer adapter powers Teensy 3.2 from OnkartGromt, but the
    Teensy 3.6 doesn't boot properly. Spectrum power supply,
    same thing. Oops on me. Appears to non-boot because my program was 
    waiting forever for Serial to come up...
    
Left to do: 
  filter1, with pedal1 wah
  mixer5
  
  reverb1
  delayExt1
  mixer2
    
===============================================================================

Additional observations:

  Please remember that the standard Serial and the standard LED on pin 13
  both interfere with audio board pin mappings. Don't use either of them!
  They will work, but their use will disable the audio board's workings.

  The notefreq block is incompatible with the use of analogRead. 
  
  This presents a problem when the expression pedals are being used, since 
  they must use analogRead. So much for making a zizzy harmony frequency offset 
  controlled by an effects pedal! Or a ring modulated effect...
  The fallback would be to have an external ADC connected via SPI or I2C.
  
  chorus - its method is not .modify() but is in fact .voices()
  reverb - its argument is not integer milliseconds, but is float seconds.
    If set to zero seconds, it assumes a value of about 1 second.
    It produces artifacts if set more than 1 second.
  tonesweep - its last argument is not integer milliseconds, but is float seconds.
    It chuffs when it is started
  