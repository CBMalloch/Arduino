#include <ESP8266WiFi.h>
#include <LinearAlgebra.h>

#define BAUDRATE 115200

/*
const int commonDimension = 3;

double a [] [commonDimension] = { { 1.0, 0.0, 0.0 }, { 0.0, 2.0, 0.0 }, { 0.0, 0.0, 1.0 } };
double b [] [commonDimension] = { { 5.0, 0.0, 0.0 }, { 0.0, 1.0, 0.0 }, { 0.0, 0.0, 1.0 } };
double c [ commonDimension ] [ commonDimension ];
*/


double AtApAt [ 3 ] [ 19 ] = { 
  {  0.0590, 0.0471, 0.0380, 0.0341, 0.0366, 0.0447, 0.0562, 0.0679, 0.0765, 0.0797, 0.0765, 0.0679, 0.0562, 0.0447, 0.0366, 0.0341, 0.0380, 0.0471, 0.0590 }, 
  {  0.1008, 0.0860, 0.0479,-0.0030,-0.0525,-0.0868,-0.0964,-0.0786,-0.0383, 0.0132, 0.0616, 0.0934, 0.0999, 0.0791, 0.0369,-0.0149,-0.0621,-0.0914,-0.0947 }, 
  { -0.0249, 0.0374, 0.0830, 0.0992, 0.0814, 0.0347,-0.0280,-0.0892,-0.1320,-0.1443,-0.1228,-0.0735,-0.0101, 0.0498, 0.0896, 0.0981, 0.0730, 0.0213,-0.0427 } };

double y [19] [1] = { {153}, {99}, {133}, {308}, {478}, {633}, {700}, {697}, {672}, {505}, 
          {343}, {199}, {112}, {85}, {157}, {341}, {512}, {646}, {684} };
          
double result [ 3 ] [ 1 ];



/*

@AtApAt
AtApAt  0.0590  0.0471  0.0380  0.0341  0.0366  0.0447  0.0562  0.0679  0.0765  0.0797  0.0765  0.0679  0.0562  0.0447  0.0366  0.0341  0.0380  0.0471  0.0590
AtApAt  0.1008  0.0860  0.0479 -0.0030 -0.0525 -0.0868 -0.0964 -0.0786 -0.0383  0.0132  0.0616  0.0934  0.0999  0.0791  0.0369 -0.0149 -0.0621 -0.0914 -0.0947
AtApAt -0.0249  0.0374  0.0830  0.0992  0.0814  0.0347 -0.0280 -0.0892 -0.1320 -0.1443 -0.1228 -0.0735 -0.0101  0.0498  0.0896  0.0981  0.0730  0.0213 -0.0427

my @y = ( [153], [99], [133], [308], [478], [633], [700], [697], [672], [505], 
          [343], [199], [112], [85], [157], [341], [512], [646], [684] );

@AtApAty
result: 410.87
result: -289.29
result: -125.19

*/

void setup() {
  
  Serial.begin ( BAUDRATE );
  while ( !Serial && millis() < 5000 );
  Serial.println ();

/*
  MPrint ( ( double * ) a, 3, 3, ( char * ) "a" );
  MPrint ( ( double * ) b, 3, 3, ( char * ) "b" );
  
  MMult ( ( double * ) a, 3, 3, ( double * ) b, 3, ( double * ) c );

  MPrint ( ( double * ) c, 3, 3 );

  
  Serial.println ( "==========================================" ); 
*/
  
  MPrint ( ( double * ) AtApAt, 3, 19, ( char * ) "AtApAt" );
  MPrint ( ( double * ) y, 19, 1, ( char * ) "y" );
  
  MMult ( ( double * ) AtApAt, 3, 19, ( double * ) y, 1, ( double * ) result );

  MPrint ( ( double * ) result, 3, 1 );

	return;
}

void loop () {
  yield ();
  delay ( 100 );
}
